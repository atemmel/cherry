fn index-of haystack needle {
    needle-len := (len $needle)
    haystack-len := (len $haystack)
    for idx := 0; (< $idx $haystack-len); $idx = (+ $idx 1) {
        end-needle-occurence := (+ $idx $needle-len)
        if (< $end-needle-occurence $haystack-len) {
            potential-needle := (slice $haystack $idx $end-needle-occurence)
            if (== $needle $potential-needle) {
                return $idx
            }
        } else {
            return -1
        }
    }
    return -1
}

# OK
assert (== (index-of "hello" "z") -1)
assert (== (index-of "hello" "h") 0)
assert (== (index-of "hello" "e") 1)
assert (== (index-of "hello" "l") 2)
assert (== (index-of "hello" "hell") 0)
assert (== (index-of "hello" "ell") 1)
assert (== (index-of "hello" "ll") 2)

# FAILURES
#assert (== (index-of "hello" "o") 4)
#assert (== (index-of "hello" "ll0") 2)

fn split str at {
    from-idx := 0
}
